{
    "openapi": "3.1.0",
    "info": {
        "title": "REST Petclinic backend API documentation",
        "description": "This is the REST API documentation of the Spring Petclinic backend.",
        "termsOfService": "https://github.com/spring-petclinic/spring-petclinic-rest/blob/master/terms.txt",
        "contact": {
            "name": "Vitaliy Fedoriv",
            "url": "https://github.com/spring-petclinic/spring-petclinic-rest",
            "email": "vitaliy.fedoriv@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:9966/petclinic",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "pettypes",
            "description": "Endpoints related to pet types."
        },
        {
            "name": "owner",
            "description": "Endpoints related to pet owners."
        },
        {
            "name": "vet",
            "description": "Endpoints related to vets."
        },
        {
            "name": "pet",
            "description": "Endpoints related to pets."
        },
        {
            "name": "specialty",
            "description": "Endpoints related to vet specialties."
        },
        {
            "name": "visit",
            "description": "Endpoints related to vet visits."
        }
    ],
    "paths": {
        "/api/visits/{visitId}": {
            "get": {
                "tags": [
                    "visit"
                ],
                "summary": "Get a visit by ID",
                "description": "Returns the visit or a 404 error.",
                "operationId": "getVisit",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "description": "The ID of the visit.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Visit details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Visit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "visit"
                ],
                "summary": "Update a visit by ID",
                "description": "Returns the visit or a 404 error.",
                "operationId": "updateVisit",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "description": "The ID of the visit.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VisitFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Visit details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Visit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "visit"
                ],
                "summary": "Delete a visit by ID",
                "description": "Returns the visit or a 404 error.",
                "operationId": "deleteVisit",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "description": "The ID of the visit.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Visit details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Visit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vets/{vetId}": {
            "get": {
                "tags": [
                    "vet"
                ],
                "summary": "Get a vet by ID",
                "description": "Returns the vet or a 404 error.",
                "operationId": "getVet",
                "parameters": [
                    {
                        "name": "vetId",
                        "in": "path",
                        "description": "The ID of the vet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vet"
                ],
                "summary": "Update a vet  by ID",
                "description": "Returns the vet or a 404 error.",
                "operationId": "updateVet",
                "parameters": [
                    {
                        "name": "vetId",
                        "in": "path",
                        "description": "The ID of the vet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Pet type details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vet"
                ],
                "summary": "Delete a vet by ID",
                "description": "Returns the vet or a 404 error.",
                "operationId": "deleteVet",
                "parameters": [
                    {
                        "name": "vetId",
                        "in": "path",
                        "description": "The ID of the vet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/specialties/{specialtyId}": {
            "get": {
                "tags": [
                    "specialty"
                ],
                "summary": "Get a specialty by ID",
                "description": "Returns the specialty or a 404 error.",
                "operationId": "getSpecialty",
                "parameters": [
                    {
                        "name": "specialtyId",
                        "in": "path",
                        "description": "The ID of the speciality.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specialty details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "specialty"
                ],
                "summary": "Update a specialty by ID",
                "description": "Returns the specialty or a 404 error.",
                "operationId": "updateSpecialty",
                "parameters": [
                    {
                        "name": "specialtyId",
                        "in": "path",
                        "description": "The ID of the specialty.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Specialty"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Specialty details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "specialty"
                ],
                "summary": "Delete a specialty by ID",
                "description": "Returns the specialty or a 404 error.",
                "operationId": "deleteSpecialty",
                "parameters": [
                    {
                        "name": "specialtyId",
                        "in": "path",
                        "description": "The ID of the specialty.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specialty details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pettypes/{petTypeId}": {
            "get": {
                "tags": [
                    "pettypes"
                ],
                "summary": "Get a pet type by ID",
                "description": "Returns the pet type or a 404 error.",
                "operationId": "getPetType",
                "parameters": [
                    {
                        "name": "petTypeId",
                        "in": "path",
                        "description": "The ID of the pet type.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet type details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet Type not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pettypes"
                ],
                "summary": "Update a pet type by ID",
                "description": "Returns the pet type or a 404 error.",
                "operationId": "updatePetType",
                "parameters": [
                    {
                        "name": "petTypeId",
                        "in": "path",
                        "description": "The ID of the pet type.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Pet type details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet Type not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "pettypes"
                ],
                "summary": "Delete a pet type by ID",
                "description": "Returns the pet type or a 404 error.",
                "operationId": "deletePetType",
                "parameters": [
                    {
                        "name": "petTypeId",
                        "in": "path",
                        "description": "The ID of the pet type.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet type details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet type not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pets/{petId}": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Get a pet by ID",
                "description": "Returns the pet  or a 404 error.",
                "operationId": "getPet",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pet"
                ],
                "summary": "Update a pet by ID",
                "description": "Returns the pet or a 404 error.",
                "operationId": "updatePet",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Pet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "pet"
                ],
                "summary": "Delete a pet by ID",
                "description": "Returns the pet or a 404 error.",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/owners/{ownerId}": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "Get a pet owner by ID",
                "description": "Returns the pet owner or a 404 error.",
                "operationId": "getOwner",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owner details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Owner not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "owner"
                ],
                "summary": "Update a pet owner's details",
                "description": "Updates the pet owner record with the specified details.",
                "operationId": "updateOwner",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OwnerFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Update successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Owner not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "owner"
                ],
                "summary": "Delete an owner by ID",
                "description": "Returns the owner or a 404 error.",
                "operationId": "deleteOwner",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owner details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Owner  not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/owners/{ownerId}/pets/{petId}": {
            "get": {
                "tags": [
                    "owner",
                    "pet"
                ],
                "summary": "Get a pet by ID",
                "description": "Returns the pet or a 404 error.",
                "operationId": "getOwnersPet",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Owner or pet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "owner",
                    "pet"
                ],
                "summary": "Update a pet's details",
                "description": "Updates the pet record with the specified details.",
                "operationId": "updateOwnersPet",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Update successful."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found for this owner.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/visits": {
            "get": {
                "tags": [
                    "visit"
                ],
                "summary": "Lists visits",
                "description": "Returns an array of visit .",
                "operationId": "listVisits",
                "responses": {
                    "200": {
                        "description": "visits found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Visit"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Visit"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "visit"
                ],
                "summary": "Create a visit",
                "description": "Creates a visit.",
                "operationId": "addVisit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Visit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "visit created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Visit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vets": {
            "get": {
                "tags": [
                    "vet"
                ],
                "summary": "Lists vets",
                "description": "Returns an array of vets.",
                "operationId": "listVets",
                "responses": {
                    "200": {
                        "description": "Vets found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vet"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vet"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vet"
                ],
                "summary": "Create a Vet",
                "description": "Creates a vet .",
                "operationId": "addVet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Vet created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vet not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/specialties": {
            "get": {
                "tags": [
                    "specialty"
                ],
                "summary": "Lists specialties",
                "description": "Returns an array of specialty .",
                "operationId": "listSpecialties",
                "responses": {
                    "200": {
                        "description": "Specialties found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Specialty"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Specialty"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "specialty"
                ],
                "summary": "Create a specialty",
                "description": "Creates a specialty .",
                "operationId": "addSpecialty",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Specialty"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Specialty created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pettypes": {
            "get": {
                "tags": [
                    "pettypes"
                ],
                "summary": "Lists pet types",
                "description": "Returns an array of pet types.",
                "operationId": "listPetTypes",
                "responses": {
                    "200": {
                        "description": "Pet types found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PetType"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PetType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "pettypes"
                ],
                "summary": "Create a pet type",
                "description": "Creates a pet type .",
                "operationId": "addPetType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetTypeFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Pet type created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet Type not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/owners": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "Lists pet owners",
                "description": "Returns an array of pet owners.",
                "operationId": "listOwners",
                "parameters": [
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Last name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owner details found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Owner"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Owner"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "Adds a pet owner",
                "description": "Records the details of a new pet owner.",
                "operationId": "addOwner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OwnerFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The pet owner was successfully added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Owner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/owners/{ownerId}/pets": {
            "post": {
                "tags": [
                    "owner",
                    "pet"
                ],
                "summary": "Adds a pet to an owner",
                "description": "Records the details of a new pet.",
                "operationId": "addPetToOwner",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The pet was successfully added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet or Owner not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/owners/{ownerId}/pets/{petId}/visits": {
            "post": {
                "tags": [
                    "owner",
                    "visit"
                ],
                "summary": "Adds a vet visit",
                "description": "Records the details of a new vet visit.",
                "operationId": "addVisitToOwner",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "The ID of the pet owner.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VisitFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The vet visit was successfully added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Visit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found for this owner.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pets": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Lists pet",
                "description": "Returns an array of pet .",
                "operationId": "listPets",
                "responses": {
                    "200": {
                        "description": "Pet types found and returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pet"
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pet"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_2",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_1",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_3",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "options": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_6",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "head": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_5",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "tags": [
                    "root-rest-controller"
                ],
                "operationId": "redirectToSwagger_4",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Visit": {
                "type": "object",
                "description": "A booking for a vet visit.",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the visit.",
                        "example": "2013-01-01"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description for the visit.",
                        "example": "rabies shot",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the visit.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    },
                    "petId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the pet.",
                        "example": 1,
                        "minimum": 0
                    }
                },
                "required": [
                    "description",
                    "id",
                    "petId"
                ]
            },
            "ProblemDetail": {
                "type": "object",
                "description": "The schema for all error responses.",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uri",
                        "description": "Full URL that originated the error response.",
                        "example": "http://localhost:9966/petclinic/api/owner",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "description": "The short error title.",
                        "example": "NoResourceFoundException",
                        "readOnly": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "HTTP status code",
                        "example": 500,
                        "maximum": 600,
                        "minimum": 400,
                        "readOnly": true
                    },
                    "detail": {
                        "type": "string",
                        "description": "The long error message.",
                        "example": "No static resource api/owner.",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the error occurred.",
                        "example": "2024-11-23T13:59:21.382040700Z",
                        "readOnly": true
                    },
                    "schemaValidationErrors": {
                        "type": "array",
                        "description": "Validation errors against the OpenAPI schema.",
                        "items": {
                            "$ref": "#/components/schemas/ValidationMessage"
                        }
                    }
                },
                "required": [
                    "detail",
                    "schemaValidationErrors",
                    "status",
                    "timestamp",
                    "title",
                    "type"
                ]
            },
            "ValidationMessage": {
                "type": "object",
                "description": "Messages describing a validation error.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The validation message.",
                        "example": "[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])",
                        "readOnly": true
                    },
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "required": [
                    "message"
                ]
            },
            "VisitFields": {
                "type": "object",
                "description": "The details of the new vet visit.",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the visit.",
                        "example": "2013-01-01"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description for the visit.",
                        "example": "rabies shot",
                        "maxLength": 255,
                        "minLength": 1
                    }
                },
                "required": [
                    "description"
                ]
            },
            "Specialty": {
                "type": "object",
                "description": "Fields of specialty of vets.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the specialty.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the specialty.",
                        "example": "radiology",
                        "maxLength": 80,
                        "minLength": 1
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "Vet": {
                "type": "object",
                "description": "A veterinarian.",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the vet.",
                        "example": "James",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the vet.",
                        "example": "Carter",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"
                    },
                    "specialties": {
                        "type": "array",
                        "description": "The specialties of the vet.",
                        "items": {
                            "$ref": "#/components/schemas/Specialty"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the vet.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    }
                },
                "required": [
                    "firstName",
                    "id",
                    "lastName",
                    "specialties"
                ]
            },
            "PetType": {
                "type": "object",
                "description": "A pet type.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the pet type.",
                        "example": "cat",
                        "maxLength": 80,
                        "minLength": 1
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the pet type.",
                        "example": 1,
                        "minimum": 0
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "Pet": {
                "type": "object",
                "description": "A pet.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the pet.",
                        "example": "Leo",
                        "maxLength": 30,
                        "minLength": 0
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of birth of the pet.",
                        "example": "2010-09-07"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PetType"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the pet.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    },
                    "ownerId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the pet's owner.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    },
                    "visits": {
                        "type": "array",
                        "description": "Vet visit bookings for this pet.",
                        "items": {
                            "$ref": "#/components/schemas/Visit"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "birthDate",
                    "id",
                    "name",
                    "type",
                    "visits"
                ]
            },
            "Owner": {
                "type": "object",
                "description": "A pet owner.",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the pet owner.",
                        "example": "George",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the pet owner.",
                        "example": "Franklin",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"
                    },
                    "address": {
                        "type": "string",
                        "description": "The postal address of the pet owner.",
                        "example": 110,
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the pet owner.",
                        "example": "Madison",
                        "maxLength": 80,
                        "minLength": 1
                    },
                    "telephone": {
                        "type": "string",
                        "description": "The telephone number of the pet owner.",
                        "example": 6085551023,
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9]*$"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the pet owner.",
                        "example": 1,
                        "minimum": 0,
                        "readOnly": true
                    },
                    "pets": {
                        "type": "array",
                        "description": "The pets owned by this individual including any booked vet visits.",
                        "items": {
                            "$ref": "#/components/schemas/Pet"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "address",
                    "city",
                    "firstName",
                    "lastName",
                    "pets",
                    "telephone"
                ]
            },
            "OwnerFields": {
                "type": "object",
                "description": "The pet owner",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the pet owner.",
                        "example": "George",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the pet owner.",
                        "example": "Franklin",
                        "maxLength": 30,
                        "minLength": 1,
                        "pattern": "^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"
                    },
                    "address": {
                        "type": "string",
                        "description": "The postal address of the pet owner.",
                        "example": 110,
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the pet owner.",
                        "example": "Madison",
                        "maxLength": 80,
                        "minLength": 1
                    },
                    "telephone": {
                        "type": "string",
                        "description": "The telephone number of the pet owner.",
                        "example": 6085551023,
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[0-9]*$"
                    }
                },
                "required": [
                    "address",
                    "city",
                    "firstName",
                    "lastName",
                    "telephone"
                ]
            },
            "PetFields": {
                "type": "object",
                "description": "The details of the new pet.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the pet.",
                        "example": "Leo",
                        "maxLength": 30,
                        "minLength": 0
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of birth of the pet.",
                        "example": "2010-09-07"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PetType"
                    }
                },
                "required": [
                    "birthDate",
                    "name",
                    "type"
                ]
            },
            "Role": {
                "type": "object",
                "description": "A role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The role's name",
                        "example": "admin",
                        "maxLength": 80,
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PetTypeFields": {
                "type": "object",
                "description": "The pet type",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the pet type.",
                        "example": "cat",
                        "maxLength": 80,
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            }
        }
    }
}